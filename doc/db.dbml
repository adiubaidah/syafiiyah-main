// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Project project_name {
  database_type: 'PostgreSQL'
  Note: 'Desain database pondok as syaifiiah'
}

enum role_type {
  "superadmin"
  "admin"
  "employee"
  "parent"
  "santri"
}

Table user {
  id int [primary key, increment]
  role role_type
  email varchar(255) [unique]
  username varchar(50) [unique]
  password varchar(255)

  Indexes {
    username
  }
}

Table holiday {
  id int [primary key, increment]
  name varchar(100) [not null, note: "Optional description of the holiday"]
  color char(7) [null]
  description varchar(255) [null]
}

Table holiday_date {
  id int [primary key, increment]
  date date [not null]
  holiday_id int [not null]
}

Ref: holiday_date.holiday_id > holiday.id [delete: cascade]

Table santri_schedule {
  id int [primary key, increment]
  name varchar(100) [not null]
  description varchar(255) [null]
  start_presence time [not null]
  start_time time [not null, note: "Waktu mulai kegiatan"]
  finish_time time [not null, note: "Waktu berakhirnya kegiatan"]
  Indexes {
    (start_presence, start_time, finish_time) [unique]
  }
}


enum gender_type {
  male
  female
}

Table santri_occupation {
  id int [increment, primary key]
  name varchar(255) [not null]
  description varchar(255) [null]
}

Table santri {
  id int [primary key, increment]
  nis varchar(15) [unique]
  name varchar(255) [not null]
  gender gender_type [not null]
  generation int [not null, note: "ex: 2024, 2022"]
  is_active boolean [default: true]
  photo varchar(100) [null]
  occupation_id int
  parent_id int
}
Ref: santri.occupation_id > santri_occupation.id [delete: set null]
Ref: santri.parent_id > parent.id [delete: set null]

Table parent {
  id int [primary key, increment]
  name varchar(255) [not null]
  address varchar(255) [not null]
  gender gender_type [not null]
  whatsapp_number varchar(14) [null, unique]
  photo varchar(100) [null]
  user_id int [unique]
}
Ref: user.id - parent.user_id [delete: set null]

Table smart_card {
  id int [primary key, increment]
  uid varchar(20) [unique,not null]
  created_at timestamptz [not null, default: 'now()']
  is_active boolean [default:false, not null]
  santri_id int [null,ref: - santri.id, note: "Smart Card bisa milik santri"]
  employee_id int [null, ref: - employee.id, note : "Smart Card bisa milik employee"]
}

enum presence_type {
  "alpha"
  "permission"
  "sick"
  "late"
  "present"
}

enum presence_created_by_type {
  "system"
  "tap"
  "admin"
}

Table santri_presence {
  id int [primary key,increment]
  schedule_id int [not null, note: "Karena bisa saja activitynya dihapus"]
  schedule_name varchar(100) [not null, note: "menggunakan name, karena jika activity dihapus, atau diubah maka masih tetap ada presence nya, karena bersifat history"]
  type presence_type [not null]
  santri_id int [not null] 
  created_at timestamptz [not null, default: `now()`]
  created_by presence_created_by_type [not null]
  notes text [null]
  santri_permission_id int [null, note: "Jika izin ditengah kegiatan maka akan diisi"]
}
Ref: santri_presence.santri_id > santri.id [delete: cascade]
Ref: santri_presence.santri_permission_id > santri_permission.id [delete: cascade]

enum permission_type {
  "sick"
  "permission"
}

Table santri_permission {
  id int [primary key, increment]
  santri_id int [ref: > santri.id, not null]
  type permission_type [not null]
  start_permission timestamptz [not null, default: 'now()']
  end_permission timestamptz [null, note: "Waktu berakhir, jika pulang, maka setting end permissionnya di akhir waktu berakhirnya schedule yang terakhir"]
  excuse varchar(255) [not null]
}

Table employee_occupation {
  id int [primary key, increment]
  name varchar(100) [not null]
  description varchar(255) [null]
}

Table employee {
  id int [primary key, increment]
  nip char(18) [unique]
  name varchar(100) [not null]
  gender gender_type [not null]
  photo varchar(100) [null]
  occupation_id int [ref: > employee_occupation.id, not null]
  user_id int [unique]

  Indexes {
    name
  }
}
Ref: user.id - employee.user_id [delete: set null]

Table admin_restrictions {
  id int [primary key, increment]
  admin_id int [ref: > employee.id, not null]
  restricted_employee_id int [ref: > employee.id, not null]

   Indexes {
    (admin_id, restricted_employee_id) [unique]
  }
}

Table employee_schedule {
  id int [increment, primary key]
  name varchar(100) [note: "ex: Pagi, siang, sore, malam", not null]
  start_presence time [not null]
  start_time time [not null, note: "Waktu jenis"]
  finish_time time [not null]
}

Table employee_presence {
  id int [primary key,increment]
  schedule_id int [not null]
  schedule_name varchar(100) [not null]
  type presence_type [not null]
  employee_id int [not null] 
  created_at timestamptz [not null, default: `now()`]
  created_by presence_created_by_type [not null]
  notes text [null]
  employee_permission_id int [null]
}
Ref: employee_presence.employee_id > employee.id [delete: cascade]

Table employee_permission {
  id int [primary key, increment]
  employee_id int [not null]
  type permission_type [not null]
  start_permission timestamptz [not null, default: 'now()']
  end_permission timestamptz [null]
  excuse varchar(255) [not null]
}
Ref: employee_permission.employee_id > employee.id [delete: cascade]

Table device {
  id int [primary key, increment]
  name varchar(100) [not null,unique, note: 'ex: device1']
}

enum device_mode_type {
  "record"
  "presence"
  "permission"
  "ping"
}

Table device_mode {
  id int [primary key, increment]
  mode device_mode_type [not null]
  input_topic varchar(100) [not null, note: "topic for input"]
  acknowledgment_topic varchar(100) [not null, note: "topic for acknowledgment"]
  device_id int [not null]
}

Ref: device_mode.device_id > device.id [delete: cascade]

//arduino1/publish || arduino1//subscribe

